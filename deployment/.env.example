JAM_HOST=jam.example.com

LNBITS_HOST=lnbits.example.com

CHANNEL=stable # can also be "master" for the more adventurous

# Comma-separated list of enabled deployments
COMPOSE_PROFILES=web,coturn

# Customize COMPOSE_PROFILES to your needs!
# Remove "web" if you have your own traefik server set up on the same docker daemon
# Remove "coturn" if you have your own stun and turn server, or don't want one (see also below)
# Add "metrics" to enable metrics powered by Prometheus and Grafana (see also below)
# Add "sfu" to enable our SFU powered by Mediasoup (see also below)
# Add "lnbits" if enabling lightning addresses for the server (not required for users or rooms
# Add "backup" to enable backing up data files from the redis and lnbits to an aws s3 bucket (see also below)

# Examples:
# COMPOSE_PROFILES=web
# COMPOSE_PROFILES=web,coturn,metrics
# COMPOSE_PROFILES=web,coturn,sfu
# COMPOSE_PROFILES=web,coturn,sfu,metrics,lnbits
# COMPOSE_PROFILES=web,coturn,sfu,metrics,lnbits,backup

# If you have your own stun and turn server or you have modified ./turnserver.conf
# (don't set these if you just want our default coturn setup)
# JAM_STUN_SERVER=stun:stun.example.com:3478
# JAM_TURN_SERVER=turn:turn.example.com:3478
# JAM_TURN_SERVER_USERNAME=foo
# JAM_TURN_SERVER_CREDENTIAL=bar

# If you want to enable metrics set
# GRAFANA_ADMIN_PASSWORD=foobar

# If you want to restrict room creation to admins
# JAM_RESTRICT_ROOM_CREATION=true

# If you want to enable Broadcast support for room streaming
# JAM_BROADCAST=true

# If you want to enable distribution as m3u8
# JAM_DISTRIBUTION_HOST=false

# If you want to run an SFU to enable rooms with large audience
# Caveat: this increases the server CPU and network usage
# JAM_SFU=true
# the external IP of your server, required for using an SFU
# JAM_SFU_EXTERNAL_IP=X.X.X.X 

# If you want to use a different image for the server logo, uncomment the
# following line and set a URI
# SERVER_LOGO="/img/jam-app-icon-192.png"

# If you want to customize the name used to refer to your instance
# SERVER_NAME="Nostr Live Audio Spaces"

# If you want the server to be able to prepare, sign and publish events
# to nostr for reflecting server status, live activities and more
# SERVER_NSEC="nsec1...."

# Additional variables for server profile for the announce bot
# SERVER_PROFILE_ABOUT=""
# SERVER_PROFILE_PICTURE=""
# SERVER_PROFILE_BANNER=""
# SERVER_PROFILE_LUD16=""
# SERVER_PROFILE_NIP05=""

# You may provide your npub as the server operator
# SERVER_OPERATOR="npub1...."

# Toggle ads enabled or not
# ADS=false

# For ads that appear on room entry screen, the root path may be set as
# follows. These ads are expected to be square and will be scaled on the
# client depending on width.  A stock deployment using docker has this
# defined to use the data folder.  Subfolders are expected for each
# year and month. E.g. /pantry/adimages/2024/05 
# SQUARE_AD_FILE_LOCATION_PATH=/pantry/adimages

# For ads in text chat, the root path may be set as follows. These ads
# are expected to have dimensions of 320 x 50 pixels suitable for mobile.
# As above, stock deployment using docker references the data folder and
# subfolders denote ads to cycle on a monthly basis.
# CHAT_AD_FILE_LOCATION_PATH=/pantry/adimages2

# If using the backup profile, you need to configure the following
BACKUP_AWS_ACCESS_KEY_ID=your-aws-access-key-id
BACKUP_AWS_SECRET_ACCESS_KEY=the-aws-secret-access-key
BACKUP_AWS_S3_BUCKET=s3-bucket-name
BACKUP_AWS_REGION=s3-region

# General Relays (will be used for most read/write to relays)
RELAYS_GENERAL=wss://relay.damus.io,wss://nos.lol,wss://nostr-pub.wellorder.net,wss://relay.snort.social

# Zap Goal Relays (specifically for zap goals)
RELAYS_ZAPGOALS=wss://relay.damus.io,wss://nos.lol,wss://nostr-pub.wellorder.net,wss://relay.snort.social

# Relays with ACL support (nostr1.com, nostrfreaks.com)
#RELAYS_ACL=wss://subdomain.nostr1.com|relay.tools|relayid,wss://subdomain.nostrfreaks.com|nostrfreaks.com|relayid2

# Whether a new relay pool connection should be establishd per write in the pantry.  If set to false, this will
# attempt to use a common relaypool but may crash/restart the backend server when there are errors.
RELAYS_POOL_PER_WRITE=true

# Live Activities - How frequent, in minutes, should an update to a live 
# activity be published to nostr
LIVE_EVENTS_UPDATE_INTERVAL=10

# Recurring events update interval - How frequent, in minutes, should all rooms
# with scheduled events that are recurring be checked for whether a new 
# scheduled activity needs to be published
RECURRING_EVENTS_UPDATE_INTERVAL=30

# Schedule/Discovery Updater - How frequent, in minutes, should the dataset for
# the discovery tab be rebuilt
SCHEDULED_EVENTS_UPDATE_INTERVAL=30

# Server Zap Goal Update - How frequent, in hours, should the server check 
# whether it should publish a new zap goal to raise funds for server management
SERVER_ZAP_GOAL_UPDATE_INTERVAL=1

# Subscription System - When enabled, allows for restricting features based upon
# whether a user currently has an active subscription.  Anonymous user's do not
# get these features, and its restricted to nostr identities.  Subscriptions are
# paid via LNBits Invoices. If enabled, the following features are restricted to
# only subscribers: 
# - integrated image upload in text chat
# - custom emoji assignment to sticky emojis and room reactions
# - goodbye emoji sequence
# - ghost view
# - recordings
SUBSCRIPTIONS_ENABLED=false

# The invoice API Key for the wallet in LNbits at the LNBITS_HOST
SUBSCRIPTIONS_WALLET_API_KEY=1234567890abcdef1234567890abcdef

# Subscription tiers offered and corresponding label presented to the user. The
# values are comma delimited and then tier id (number) separated from label by a
# colon.
SUBSCRIPTIONS_TIERS_OFFERED="0:Sweet"

# Subscription costs per day, month or year. Users will be presented with choices
# and can purchase shorter duration if they choose to test it out. Longer terms
# can be a way to provide discounts. All values are measured in sats
SUBSCRIPTIONS_RATES_OFFERED="DAY,MONTH,YEAR"

# If subscriptions can be acquired for 1 day, this is the rate
SUBSCRIPTIONS_TIER_0_RATE_PER_DAY=388

# If subscriptions can be acquired for 1 month (30 day), this is the rate
SUBSCRIPTIONS_TIER_0_RATE_PER_MONTH=3880

# If subscriptions can be acquired for 1 year (365 day), this is the rate
SUBSCRIPTIONS_TIER_0_RATE_PER_YEAR=38800

# Gif Endpoints - When enabled, the router will send gif requests to the service provider
# indicated by the endpoint, using the api key for authorization. The strucutre of requests
# to the service provider is expected to confirm to gifbuddy.lol as denoted briefly herein
#   Headers:
#        Content-Type: application/json
#        API-Key: YOUR_API_KEY_HERE
#   Request Body:
#        {
#            "q": "",  // Required. The search term to find GIFs.
#            "pos": "" // Optional. A token to fetch the next set of results.
#        }
#   Response Body:
#        {
#            "funny_cat": {
#                "gifUrl": "https://example.com/gif.gif",
#                "gifSize": "204800",
#                "gifDims": [300, 200],
#                "thumb": "https://example.com/thumbnail.gif",
#                "preview": "https://example.com/preview.gif",
#                "alt": "A funny cat",
#                "image": "https://example.com/image.jpg",
#                "summary": "funny cat GIF"
#            },
#            "next": "abcd1234"
#        }
GIF_SEARCH_ENABLED=false
# The endpoint url for the gif search service
GIF_SEARCH_ENDPOINT=https://gifbuddy.lol/api/search_gifs
# An API Key to use for authenticating with the service
GIF_SEARCH_APIKEY=buddy_1234567890

# Toggle Game Mode
GAME=false
# Game Score Update Interval - How frequent, in hours, should the server 
# publish the current game scores
GAME_SCORE_UPDATE_INTERVAL=1
